// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package lumas

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subscriber struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscriber) Reset()         { *m = Subscriber{} }
func (m *Subscriber) String() string { return proto.CompactTextString(m) }
func (*Subscriber) ProtoMessage()    {}
func (*Subscriber) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{0}
}

func (m *Subscriber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscriber.Unmarshal(m, b)
}
func (m *Subscriber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscriber.Marshal(b, m, deterministic)
}
func (m *Subscriber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscriber.Merge(m, src)
}
func (m *Subscriber) XXX_Size() int {
	return xxx_messageInfo_Subscriber.Size(m)
}
func (m *Subscriber) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscriber.DiscardUnknown(m)
}

var xxx_messageInfo_Subscriber proto.InternalMessageInfo

func (m *Subscriber) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Frame struct {
	Image                 *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	PresentationTimeStamp int64    `protobuf:"varint,2,opt,name=presentationTimeStamp,proto3" json:"presentationTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Frame) Reset()         { *m = Frame{} }
func (m *Frame) String() string { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()    {}
func (*Frame) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{1}
}

func (m *Frame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Frame.Unmarshal(m, b)
}
func (m *Frame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Frame.Marshal(b, m, deterministic)
}
func (m *Frame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Frame.Merge(m, src)
}
func (m *Frame) XXX_Size() int {
	return xxx_messageInfo_Frame.Size(m)
}
func (m *Frame) XXX_DiscardUnknown() {
	xxx_messageInfo_Frame.DiscardUnknown(m)
}

var xxx_messageInfo_Frame proto.InternalMessageInfo

func (m *Frame) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Frame) GetPresentationTimeStamp() int64 {
	if m != nil {
		return m.PresentationTimeStamp
	}
	return 0
}

type Video struct {
	StartPTS             int64    `protobuf:"varint,1,opt,name=startPTS,proto3" json:"startPTS,omitempty"`
	EndPTS               int64    `protobuf:"varint,2,opt,name=endPTS,proto3" json:"endPTS,omitempty"`
	Source               string   `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}
func (*Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{2}
}

func (m *Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Video.Unmarshal(m, b)
}
func (m *Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Video.Marshal(b, m, deterministic)
}
func (m *Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Video.Merge(m, src)
}
func (m *Video) XXX_Size() int {
	return xxx_messageInfo_Video.Size(m)
}
func (m *Video) XXX_DiscardUnknown() {
	xxx_messageInfo_Video.DiscardUnknown(m)
}

var xxx_messageInfo_Video proto.InternalMessageInfo

func (m *Video) GetStartPTS() int64 {
	if m != nil {
		return m.StartPTS
	}
	return 0
}

func (m *Video) GetEndPTS() int64 {
	if m != nil {
		return m.EndPTS
	}
	return 0
}

func (m *Video) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Artifact struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Frame                *Frame          `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	Video                *Video          `protobuf:"bytes,3,opt,name=video,proto3" json:"video,omitempty"`
	Parameters           *_struct.Struct `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{3}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artifact) GetFrame() *Frame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *Artifact) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *Artifact) GetParameters() *_struct.Struct {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Action struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artifact             []*Artifact     `protobuf:"bytes,2,rep,name=artifact,proto3" json:"artifact,omitempty"`
	Parameters           *_struct.Struct `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{4}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Action) GetArtifact() []*Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *Action) GetParameters() *_struct.Struct {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{5}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type EventAction struct {
	Event                *Event    `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Action               *Action   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Camera               []*Camera `protobuf:"bytes,3,rep,name=camera,proto3" json:"camera,omitempty"`
	Send                 string    `protobuf:"bytes,4,opt,name=send,proto3" json:"send,omitempty"`
	Receiver             *Service  `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventAction) Reset()         { *m = EventAction{} }
func (m *EventAction) String() string { return proto.CompactTextString(m) }
func (*EventAction) ProtoMessage()    {}
func (*EventAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{6}
}

func (m *EventAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventAction.Unmarshal(m, b)
}
func (m *EventAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventAction.Marshal(b, m, deterministic)
}
func (m *EventAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAction.Merge(m, src)
}
func (m *EventAction) XXX_Size() int {
	return xxx_messageInfo_EventAction.Size(m)
}
func (m *EventAction) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAction.DiscardUnknown(m)
}

var xxx_messageInfo_EventAction proto.InternalMessageInfo

func (m *EventAction) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EventAction) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *EventAction) GetCamera() []*Camera {
	if m != nil {
		return m.Camera
	}
	return nil
}

func (m *EventAction) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *EventAction) GetReceiver() *Service {
	if m != nil {
		return m.Receiver
	}
	return nil
}

type Event struct {
	Type                  string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Camera                *Camera   `protobuf:"bytes,2,opt,name=camera,proto3" json:"camera,omitempty"`
	PresentationTimeStamp int64     `protobuf:"varint,3,opt,name=presentationTimeStamp,proto3" json:"presentationTimeStamp,omitempty"`
	Artifact              *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}  `json:"-"`
	XXX_unrecognized      []byte    `json:"-"`
	XXX_sizecache         int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{7}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetCamera() *Camera {
	if m != nil {
		return m.Camera
	}
	return nil
}

func (m *Event) GetPresentationTimeStamp() int64 {
	if m != nil {
		return m.PresentationTimeStamp
	}
	return 0
}

func (m *Event) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type Camera struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Camera) Reset()         { *m = Camera{} }
func (m *Camera) String() string { return proto.CompactTextString(m) }
func (*Camera) ProtoMessage()    {}
func (*Camera) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{8}
}

func (m *Camera) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Camera.Unmarshal(m, b)
}
func (m *Camera) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Camera.Marshal(b, m, deterministic)
}
func (m *Camera) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Camera.Merge(m, src)
}
func (m *Camera) XXX_Size() int {
	return xxx_messageInfo_Camera.Size(m)
}
func (m *Camera) XXX_DiscardUnknown() {
	xxx_messageInfo_Camera.DiscardUnknown(m)
}

var xxx_messageInfo_Camera proto.InternalMessageInfo

func (m *Camera) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Camera) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Subscriber)(nil), "lumas.Subscriber")
	proto.RegisterType((*Frame)(nil), "lumas.Frame")
	proto.RegisterType((*Video)(nil), "lumas.Video")
	proto.RegisterType((*Artifact)(nil), "lumas.Artifact")
	proto.RegisterType((*Action)(nil), "lumas.Action")
	proto.RegisterType((*Service)(nil), "lumas.Service")
	proto.RegisterType((*EventAction)(nil), "lumas.EventAction")
	proto.RegisterType((*Event)(nil), "lumas.Event")
	proto.RegisterType((*Camera)(nil), "lumas.Camera")
}

func init() { proto.RegisterFile("events.proto", fileDescriptor_8f22242cb04491f9) }

var fileDescriptor_8f22242cb04491f9 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x25, 0xcd, 0x4b, 0x5e, 0xdf, 0x6d, 0xad, 0x38, 0xa0, 0x86, 0xe2, 0xa2, 0x04, 0x94, 0xe2,
	0x47, 0x9e, 0xf4, 0x09, 0xae, 0x1f, 0xa2, 0xe0, 0x4e, 0x26, 0x0f, 0xf7, 0xd3, 0xf4, 0xb6, 0x0e,
	0x34, 0x1f, 0xcc, 0x4c, 0x0a, 0x6e, 0xfd, 0x0f, 0xae, 0x5d, 0xf9, 0x3b, 0xfc, 0x6b, 0x32, 0x77,
	0x26, 0xe9, 0x07, 0x7d, 0xe2, 0x2e, 0x73, 0xcf, 0xc9, 0x9d, 0x73, 0xee, 0xb9, 0x0c, 0x8c, 0x71,
	0x87, 0x95, 0xd1, 0x59, 0xa3, 0x6a, 0x53, 0xb3, 0x68, 0xdb, 0x96, 0x42, 0x4f, 0x9f, 0x6d, 0xea,
	0x7a, 0xb3, 0xc5, 0x6b, 0x2a, 0x2e, 0xdb, 0xf5, 0xb5, 0x36, 0xaa, 0x2d, 0x8c, 0x23, 0x4d, 0x47,
	0xb2, 0x14, 0x1b, 0xf4, 0x87, 0xb1, 0x42, 0xdd, 0x6e, 0x3d, 0x94, 0xce, 0x00, 0xf2, 0x76, 0xa9,
	0x0b, 0x25, 0x97, 0xa8, 0x18, 0x83, 0x8b, 0x4a, 0x94, 0x98, 0x04, 0xb3, 0x60, 0x7e, 0xc5, 0xe9,
	0x3b, 0x15, 0x10, 0x7d, 0x52, 0xa2, 0x44, 0x96, 0x42, 0x44, 0x7d, 0x08, 0x1d, 0x2d, 0xc6, 0x19,
	0x5d, 0x9d, 0x7d, 0xb6, 0x35, 0xee, 0x20, 0xf6, 0x0e, 0x1e, 0x37, 0x0a, 0x35, 0x56, 0x46, 0x18,
	0x59, 0x57, 0x77, 0xb2, 0xc4, 0xdc, 0x88, 0xb2, 0x49, 0x06, 0xb3, 0x60, 0x1e, 0xf2, 0xf3, 0x60,
	0x9a, 0x43, 0xf4, 0x55, 0xae, 0xb0, 0x66, 0x53, 0x18, 0x6a, 0x23, 0x94, 0xf9, 0x72, 0x97, 0xd3,
	0x2d, 0x21, 0xef, 0xcf, 0xec, 0x09, 0xc4, 0x58, 0xad, 0x2c, 0xe2, 0x7a, 0xf9, 0x93, 0xad, 0xeb,
	0xba, 0x55, 0x05, 0x26, 0x21, 0xa9, 0xf6, 0xa7, 0xf4, 0x57, 0x00, 0xc3, 0x5b, 0x65, 0xe4, 0x5a,
	0x14, 0xe6, 0x9c, 0x31, 0xeb, 0x67, 0x6d, 0x8d, 0x51, 0xbf, 0xbd, 0x1f, 0x32, 0xcb, 0x1d, 0x64,
	0x39, 0x3b, 0xab, 0x8c, 0x7a, 0xef, 0x39, 0xa4, 0x96, 0x3b, 0x88, 0xbd, 0x07, 0x68, 0x84, 0x65,
	0x1b, 0x54, 0x3a, 0xb9, 0x20, 0xe2, 0xd3, 0xcc, 0x05, 0x92, 0x75, 0x81, 0x64, 0x39, 0x05, 0xc2,
	0x0f, 0xa8, 0xe9, 0x8f, 0x00, 0xe2, 0xdb, 0xc2, 0x8e, 0xe2, 0xac, 0xbe, 0x57, 0x30, 0x14, 0x5e,
	0x7f, 0x32, 0x98, 0x85, 0xf3, 0xd1, 0xe2, 0xa1, 0xbf, 0xbe, 0xb3, 0xc5, 0x7b, 0xc2, 0x89, 0x88,
	0xf0, 0xff, 0x45, 0xbc, 0x81, 0xcb, 0x1c, 0xd5, 0x4e, 0x16, 0x78, 0x56, 0xc4, 0x04, 0x06, 0x72,
	0xe5, 0x27, 0x3e, 0x90, 0xab, 0xf4, 0x4f, 0x00, 0xa3, 0x8f, 0x76, 0x01, 0xbd, 0xf0, 0x14, 0x22,
	0xda, 0xc7, 0x93, 0xa5, 0x20, 0x0a, 0x77, 0x10, 0x7b, 0x0e, 0xb1, 0x20, 0xb6, 0x9f, 0xf4, 0x83,
	0xce, 0x06, 0x15, 0xb9, 0x07, 0x2d, 0xad, 0x10, 0x25, 0x2a, 0x91, 0x84, 0xe4, 0xb6, 0xa3, 0x7d,
	0xa0, 0x22, 0xf7, 0xa0, 0x55, 0xa9, 0xb1, 0x5a, 0xd1, 0xa0, 0xaf, 0x38, 0x7d, 0xb3, 0x97, 0x30,
	0x54, 0x58, 0xa0, 0xdc, 0xa1, 0x4a, 0x22, 0xba, 0x63, 0xe2, 0x7f, 0xf6, 0xde, 0x78, 0x8f, 0xa7,
	0xbf, 0x03, 0x88, 0x48, 0x9e, 0xed, 0x64, 0xbe, 0x37, 0xbd, 0x5f, 0xfb, 0x7d, 0x20, 0xe2, 0x58,
	0xeb, 0x89, 0x88, 0x7b, 0xf7, 0x3c, 0xfc, 0xc7, 0x9e, 0x1f, 0x25, 0xea, 0xf6, 0xe4, 0xfe, 0x44,
	0xd3, 0xd7, 0x10, 0xbb, 0x4b, 0x7d, 0x06, 0x41, 0x97, 0x41, 0x9f, 0xd3, 0x60, 0x9f, 0xd3, 0xe2,
	0x67, 0x00, 0x31, 0xb9, 0xd2, 0xec, 0x06, 0x26, 0x1c, 0x37, 0x52, 0x1b, 0x54, 0xdd, 0x76, 0x1d,
	0xa6, 0xe2, 0x6a, 0xd3, 0xce, 0x18, 0xa7, 0xd7, 0x80, 0x65, 0x70, 0xa5, 0xbb, 0x77, 0x80, 0x3d,
	0xea, 0x86, 0xd7, 0xbf, 0x0c, 0xd3, 0xa3, 0x60, 0xdf, 0x06, 0xec, 0x05, 0x5c, 0x36, 0xed, 0x72,
	0x2b, 0xf5, 0x37, 0x76, 0x04, 0x9d, 0xf4, 0x5d, 0xc6, 0xb4, 0x7b, 0x37, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x43, 0x93, 0x08, 0x27, 0xb6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventsClient is the client API for Events service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsClient interface {
	RegisterAction(ctx context.Context, in *EventAction, opts ...grpc.CallOption) (*Result, error)
	Subscribe(ctx context.Context, in *Subscriber, opts ...grpc.CallOption) (Events_SubscribeClient, error)
	Publish(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Result, error)
}

type eventsClient struct {
	cc *grpc.ClientConn
}

func NewEventsClient(cc *grpc.ClientConn) EventsClient {
	return &eventsClient{cc}
}

func (c *eventsClient) RegisterAction(ctx context.Context, in *EventAction, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/lumas.Events/RegisterAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) Subscribe(ctx context.Context, in *Subscriber, opts ...grpc.CallOption) (Events_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Events_serviceDesc.Streams[0], "/lumas.Events/subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Events_SubscribeClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type eventsSubscribeClient struct {
	grpc.ClientStream
}

func (x *eventsSubscribeClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventsClient) Publish(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/lumas.Events/publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServer is the server API for Events service.
type EventsServer interface {
	RegisterAction(context.Context, *EventAction) (*Result, error)
	Subscribe(*Subscriber, Events_SubscribeServer) error
	Publish(context.Context, *Event) (*Result, error)
}

func RegisterEventsServer(s *grpc.Server, srv EventsServer) {
	s.RegisterService(&_Events_serviceDesc, srv)
}

func _Events_RegisterAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventAction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).RegisterAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lumas.Events/RegisterAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).RegisterAction(ctx, req.(*EventAction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Events_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Subscriber)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventsServer).Subscribe(m, &eventsSubscribeServer{stream})
}

type Events_SubscribeServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type eventsSubscribeServer struct {
	grpc.ServerStream
}

func (x *eventsSubscribeServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Events_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lumas.Events/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).Publish(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _Events_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lumas.Events",
	HandlerType: (*EventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterAction",
			Handler:    _Events_RegisterAction_Handler,
		},
		{
			MethodName: "publish",
			Handler:    _Events_Publish_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "subscribe",
			Handler:       _Events_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "events.proto",
}
